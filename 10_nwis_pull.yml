target_default: 10_nwis_pull

packages:
  - dataRetrieval
  - yaml
  - scipiper
  - dplyr
  - data.table
  
sources:
  - 10_nwis_pull/src/inventory_nwis.R
  - 10_nwis_pull/src/nwis_pull.R
  - 10_nwis_pull/src/compare_nwis_services.R
  - 10_nwis_pull/src/nwis_partition.R
  - 10_nwis_pull/src//summarize_nwis_pull.R

targets:
  10_nwis_pull:
    depends:
      - 10_nwis_pull/out/nwis_dv_data.rds.ind
      - 10_nwis_pull/out/nwis_uv_data.rds.ind
      - 10_nwis_pull/out/nwis_pull_diagnostics.yml
      
# -- get a CONUS inventory of available data for download -- #

  # Edit this to be the current day (YYMMDD) if you want to force a 
  #   re-download of the data even if the inventory hasn't changed OR
  #   if you are forcing an entire rebuild, including the inventory.
  pull_id_dv:
    command: c(I("210422"))
  pull_id_uv:
    command: c(I("210422"))

  # modify end date to extend data pull
  nwis_pull_parameters:
    command: yaml.load_file('10_nwis_pull/cfg/nwis_pull_params.yml')
    
  nwis_pull_size: 
    command: I(250000)
    
  # -- get inventory of observations available to download -- #

  # dv data
  # force rebuild of the inventories if you want to start over
  10_nwis_pull/inout/nwis_dv_inventory.rds.ind:
    command: inventory_nwis(inv_ind = target_name,
      nwis_pull_params = nwis_pull_parameters, 
      service = I('dv'))
      
  10_nwis_pull/inout/nwis_dv_inventory.rds:
    command: s3_get('10_nwis_pull/inout/nwis_dv_inventory.rds.ind')
    
  nwis_dv_inventory:
    command: readRDS('10_nwis_pull/inout/nwis_dv_inventory.rds')
  
  # uv data 
  10_nwis_pull/inout/nwis_uv_inventory.rds.ind:
    command: inventory_nwis(inv_ind = target_name,
      nwis_pull_params = nwis_pull_parameters, 
      service = I('uv'))
      
  10_nwis_pull/inout/nwis_uv_inventory.rds:
    command: s3_get('10_nwis_pull/inout/nwis_uv_inventory.rds.ind')
    
  # create a table that compares services
  nwis_compare_services:
    command: compare_services(
      dv = '10_nwis_pull/inout/nwis_dv_inventory.rds', 
      uv = '10_nwis_pull/inout/nwis_uv_inventory.rds')
    
  # filter the UV inventory to only those sites that are not in DV
  # this isn't perfect - as some sites overlap but don't have the same data.
  
  nwis_uv_inventory_reduced:
    command: reduce_redundancy(compare = nwis_compare_services)

  # -- partition data -- #
  # dv
  nwis_dv_partition:
    command: partition_inventory(inventory = nwis_dv_inventory, nwis_pull_size, pull_id_dv) 
    
  #uv
  nwis_uv_partition:
    command: partition_inventory(inventory = nwis_uv_inventory_reduced, nwis_pull_size, pull_id_uv) 
    
  # -- create and execute tasks from pull table -- #

  # prepare a remake-style plan for running each partition as a separate
  # remake target in a separate remake file
  
  #dv
  nwis_dv_pull_plan:
    command: plan_nwis_pull(partitions = nwis_dv_partition, service = I('dv'))

  10_nwis_dv_pull_tasks.yml:
    command: create_nwis_pull_makefile(makefile=target_name, task_plan=nwis_dv_pull_plan,
      final_targets = I('10_nwis_pull/tmp/nwis_dv_data.rds.ind'))

  10_nwis_pull/tmp/nwis_dv_data.rds.ind:
    command: loop_tasks(task_plan=nwis_dv_pull_plan, task_makefile='10_nwis_dv_pull_tasks.yml',
      num_tries=I(30), sleep_on_error=I(20))
    depends:
      - 10_nwis_pull/src/nwis_pull.R
  
  10_nwis_pull/out/nwis_dv_data.rds.ind:
    command: s3_put(remote_ind = target_name,
                    local_source = '10_nwis_pull/tmp/nwis_dv_data.rds.ind')
  
  10_nwis_pull/out/nwis_dv_data.rds:
    command: s3_get('10_nwis_pull/out/nwis_dv_data.rds.ind')
      
  #uv
  nwis_uv_pull_plan:
    command: plan_nwis_pull(partitions = nwis_uv_partition, service = I('uv'))

  10_nwis_uv_pull_tasks.yml:
    command: create_nwis_pull_makefile(makefile=target_name, task_plan=nwis_uv_pull_plan,
      final_targets = I('10_nwis_pull/tmp/nwis_uv_data.rds.ind'))

  10_nwis_pull/tmp/nwis_uv_data.rds.ind:
    command: loop_tasks(task_plan=nwis_uv_pull_plan, task_makefile='10_nwis_uv_pull_tasks.yml',
      num_tries=I(30), sleep_on_error=I(20))
    depends:
      - 10_nwis_pull/src/nwis_pull.R

  10_nwis_pull/out/nwis_uv_data.rds.ind:
    command: s3_put(remote_ind = target_name,
                    local_source = '10_nwis_pull/tmp/nwis_uv_data.rds.ind')
  
  10_nwis_pull/out/nwis_uv_data.rds:
    command: s3_get('10_nwis_pull/out/nwis_uv_data.rds.ind')
  
  # diagnostics from big pull
  10_nwis_pull/out/nwis_pull_diagnostics.yml:
    command: summarize_nwis_pull(
      target_file = target_name,
      nwis_dv_ind = '10_nwis_pull/out/nwis_dv_data.rds.ind',
      nwis_uv_ind = '10_nwis_pull/out/nwis_uv_data.rds.ind')
