target_default: 2_nwis_pull

packages:
  - dataRetrieval
  - yaml
  - maps
  - ggplot2
  - ggthemes
  - scipiper
  - dplyr
  
sources:
  - 2_nwis_pull/src/inventory_nwis.R
  - lib/src/require_local.R
  - 2_nwis_pull/src/nwis_pull.R
  - 2_nwis_pull/src/compare_nwis_services.R
  - 2_nwis_pull/src/nwis_partition.R

targets:
  2_nwis_pull:
    depends:
      - 2_nwis_pull/out/nwis_dv_data.rds.ind
      - 2_nwis_pull/out/nwis_uv_data.rds.ind
      
# -- get a CONUS inventory of available data for download -- #

  nwis_pull_parameters:
    command: yaml.load_file('2_nwis_pull/cfg/nwis_pull_params.yml')
    
  nwis_pull_size: 
    command: I(250000)
    
  # -- get inventory of observations available to download -- #

  # dv data
  # force rebuilt of the inventories if you want to start over
  2_nwis_pull/inout/nwis_dv_inventory.feather.ind:
    command: inventory_nwis(inv_ind = target_name,
      nwis_pull_params = nwis_pull_parameters, 
      service = I('dv'))
      
  2_nwis_pull/inout/nwis_dv_inventory.feather:
    command: gd_get('2_nwis_pull/inout/nwis_dv_inventory.feather.ind')
  
  # uv data 
  2_nwis_pull/inout/nwis_uv_inventory.feather.ind:
    command: inventory_nwis(inv_ind = target_name,
      nwis_pull_params = nwis_pull_parameters, 
      service = I('uv'))
      
  2_nwis_pull/inout/nwis_uv_inventory.feather:
    command: gd_get('2_nwis_pull/inout/nwis_uv_inventory.feather.ind')
    
  # create a table that compares services
  2_nwis_pull/inout/nwis_compare_services.feather.ind:
    command: compare_services(dv_ind = '2_nwis_pull/inout/nwis_dv_inventory.feather.ind', 
      uv_ind = '2_nwis_pull/inout/nwis_uv_inventory.feather.ind', compare_ind = target_name)
    
  2_nwis_pull/inout/nwis_compare_services.feather:
    command: gd_get('2_nwis_pull/inout/nwis_compare_services.feather.ind')
    
  # filter the UV inventory to only those sites that are not in DV
  # this isn't perfect - as some sites overlap but don't have the same data.
  
  2_nwis_pull/inout/nwis_uv_inventory_reduced.feather.ind:
    command: reduce_redundancy(uv_inv_ind = '2_nwis_pull/inout/nwis_uv_inventory.feather.ind', 
      compare_ind = '2_nwis_pull/inout/nwis_compare_services.feather.ind',
      out_ind = target_name)
    
  2_nwis_pull/inout/nwis_uv_inventory_reduced.feather:
    command: gd_get('2_nwis_pull/inout/nwis_uv_inventory_reduced.feather.ind')

  # -- partition data -- #
  # dv
  2_nwis_pull/inout/nwis_dv_partition.feather.ind:
    command: partition_inventory(inventory_ind = '2_nwis_pull/inout/nwis_dv_inventory.feather.ind', 
      nwis_pull_size, 
      partitions_ind = target_name) 
 
  2_nwis_pull/inout/nwis_dv_partition.feather:
    command: gd_get('2_nwis_pull/inout/nwis_dv_partition.feather.ind')
    
  #uv
  2_nwis_pull/inout/nwis_uv_partition.feather.ind:
    command: partition_inventory(inventory_ind = '2_nwis_pull/inout/nwis_uv_inventory_reduced.feather.ind', 
      nwis_pull_size, 
      partitions_ind = target_name) 
 
  2_nwis_pull/inout/nwis_uv_partition.feather:
    command: gd_get('2_nwis_pull/inout/nwis_uv_partition.feather.ind')
    
  # -- create and execute tasks from pull table -- #

  # prepare a remake-style plan for running each partition as a separate
  # remake target in a separate remake file
  
  #dv
  nwis_dv_pull_plan:
    command: plan_nwis_pull(partitions_ind='2_nwis_pull/inout/nwis_dv_partition.feather.ind',
      service = I('dv'))

  2_nwis_dv_pull_tasks.yml:
    command: create_nwis_pull_makefile(makefile=target_name, task_plan=nwis_dv_pull_plan,
      final_targets = I('2_nwis_pull/out/nwis_dv_data.rds.ind'))

  2_nwis_pull/out/nwis_dv_data.rds.ind:
    command: loop_tasks(task_plan=nwis_dv_pull_plan, task_makefile='2_nwis_dv_pull_tasks.yml',
      num_tries=I(30), sleep_on_error=I(20))
    depends:
      - 2_nwis_pull/src/nwis_pull.R
      
  2_nwis_pull/out/nwis_dv_data.rds:
    command: gd_get('2_nwis_pull/out/nwis_dv_data.rds.ind')
      
  #uv
  nwis_uv_pull_plan:
    command: plan_nwis_pull(partitions_ind='2_nwis_pull/inout/nwis_uv_partition.feather.ind',
      service = I('uv'))

  2_nwis_uv_pull_tasks.yml:
    command: create_nwis_pull_makefile(makefile=target_name, task_plan=nwis_uv_pull_plan,
      final_targets = I('2_nwis_pull/out/nwis_uv_data.rds.ind'))

  2_nwis_pull/out/nwis_uv_data.rds.ind:
    command: loop_tasks(task_plan=nwis_uv_pull_plan, task_makefile='2_nwis_uv_pull_tasks.yml',
      num_tries=I(30), sleep_on_error=I(20))
    depends:
      - 2_nwis_pull/src/nwis_pull.R
      
  2_nwis_pull/out/nwis_uv_data.rds:
    command: gd_get('2_nwis_pull/out/nwis_uv_data.rds.ind')
